{"version":3,"sources":["css/Auth.module.css","css/Content.module.css","css/ContentForm.module.css","css/Profile.module.css","css/Navigation.module.css","myFirebase.js","components/AuthForm.js","pages/Auth.js","components/Content.js","components/ContentForm.js","pages/Home.js","components/Navigation.js","pages/Profile.js","components/Router.js","components/App.js","index.js"],"names":["module","exports","myFirebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAuth","getAuth","fireDatabase","getFirestore","fireStorage","getStorage","AuthForm","useState","email","password","form","setForm","createAccount","setCreateAccount","error","setError","formChange","target","name","value","formSubmit","e","a","preventDefault","createUserWithEmailAndPassword","account","signInWithEmailAndPassword","console","log","message","className","style","auth_form","onSubmit","type","placeholder","required","onChange","toggle_button","onClick","current","Auth","googleLogin","provider","GoogleAuthProvider","signInWithPopup","social_login","Content","content","isWriter","updateMode","setUpdateMode","text","editText","setEditText","contentFromDatabase","doc","id","deleteButtonHandler","window","confirm","deleteDoc","imageFileURL","deleteObject","ref","toggleUpdate","updateDoc","update_form","title","image","src","alt","content_button","ContentForm","userObject","setText","imageFile","setImageFile","InputFile","useRef","imageFileRef","uid","uuidv4","uploadString","getDownloadURL","then","contentObject","createdAt","Date","now","writerUID","addDoc","collection","content_form","input_wrapper","maxLength","submit_button","htmlFor","accept","file","files","fileReader","FileReader","readAsDataURL","onloadend","result","currentTarget","image_upload","Home","contents","setContents","useEffect","documents","query","orderBy","onSnapshot","snapshot","documentArray","docs","map","document","data","Navigation","nav_list","to","displayName","Profile","currentUserName","userName","setUserName","navigate","useNavigate","updateProfile","currentUser","name_input","edit_button","logout_button","signOut","AppRouter","login","basename","exact","path","element","App","firebaseListen","setFirebaseListen","setUserObject","onAuthStateChanged","user","argument","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,cAAgB,4BAA4B,aAAe,6B,mBCAjHD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,MAAQ,uBAAuB,MAAQ,uBAAuB,eAAiB,kC,mBCA5ID,EAAOC,QAAU,CAAC,aAAe,kCAAkC,cAAgB,mCAAmC,aAAe,kCAAkC,cAAgB,qC,mBCAvLD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,YAAc,6BAA6B,cAAgB,iC,mBCAtHD,EAAOC,QAAU,CAAC,SAAW,+B,iLCavBC,EAAaC,YATI,CACrBC,OAAQC,0CACRC,WAAYD,oCACZE,UAAWF,oBACXG,cAAeH,gCACfI,kBAAmBJ,eACnBK,MAAOL,8CAIIM,EAAeC,YAAQV,GACvBW,EAAeC,cACfC,EAAcC,c,uCC0CZC,MAtDf,WACE,MAAwBC,mBAAS,CAACC,MAAQ,GAAIC,SAAU,KAAxD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAYMC,EAAa,SAAC,GAA8B,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACnCR,EAAQ,2BAAID,GAAL,kBAAYQ,EAAMC,MAGrBC,EAAU,uCAAG,WAAMC,GAAN,eAAAC,EAAA,yDACjBD,EAAEE,iBADe,UAIZX,EAJY,gCAMGY,YAA+BxB,EAAcU,EAAKF,MAAOE,EAAKD,UANjE,OAMbgB,EANa,+CASGC,YAA2B1B,EAAcU,EAAKF,MAAOE,EAAKD,UAT7D,QASbgB,EATa,eAWfE,QAAQC,IAAIH,GAXG,kDAafV,EAAS,KAAMc,SAbA,0DAAH,sDAsBhB,OACE,gCACE,uBAAMC,UAAWC,IAAMC,UAAWC,SAAUb,EAA5C,UACE,uBAAOc,KAAK,QAAQhB,KAAK,QAAQC,MAAOT,EAAKF,MAAO2B,YAAY,qBAAMC,UAAQ,EAACC,SAAUrB,IACzF,uBAAOkB,KAAK,WAAWhB,KAAK,WAAWC,MAAOT,EAAKD,SAAU0B,YAAY,2BAAOC,UAAQ,EAACC,SAAUrB,IACnG,wBAAQkB,KAAK,SAAb,SAAuBtB,EAAgB,2BAAS,uBAC/CE,GAAS,yCAAYA,QAExB,wBAAQgB,UAAWC,IAAMO,cAAeC,QAZhB,WAC1B1B,GAAiB,SAAC2B,GAAD,OAAcA,MAW7B,SAAuE5B,EAAgB,iCAAU,6CC9BxF6B,MAlBf,WAEE,IAAMC,EAAW,uCAAG,4BAAApB,EAAA,6DACZqB,EAAW,IAAIC,IADH,SAEZC,YAAgB7C,EAAc2C,GAFlB,2CAAH,qDAKjB,OACE,gCAEE,cAAC,EAAD,IACA,8BACE,wBAAQb,UAAWC,IAAMe,aAAcP,QAASG,EAAhD,yD,iBCmDOK,MA/Df,YAAuC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SACzB,EAAoC1C,oBAAS,GAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KACA,EAAgC5C,mBAASyC,EAAQI,MAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAsBC,YAAItD,EAAc,WAAf,UAA8B8C,EAAQS,KAE/DC,EAAmB,uCAAG,sBAAApC,EAAA,0DACVqC,OAAOC,QAAQ,kEADL,gCAGlBC,YAAUN,GAHQ,UAII,KAAzBP,EAAQc,aAJa,gCAKhBC,YAAaC,YAAI5D,EAAa4C,EAAQc,eALtB,2CAAH,qDAUnBG,EAAe,WACnBd,GAAc,SAACX,GAAD,OAAcA,MAOxBpB,EAAU,uCAAG,WAAMC,GAAN,SAAAC,EAAA,6DACjBD,EAAEE,iBADe,SAEX2C,YAAUX,EAAqB,CAACH,KAAMC,IAF3B,OAGjBF,GAAc,GAHG,2CAAH,sDAMhB,OACE,8BACGD,EACC,mCACGD,GACC,sBAAKnB,UAAWC,IAAMoC,YAAtB,UACE,uBAAMlC,SAAUb,EAAhB,UACE,uBAAOc,KAAK,OAAOf,MAAOkC,EAAUhB,SAjB3B,SAAC,GAAwB,IAAblB,EAAY,EAAtBF,OAAUE,MACjCmC,EAAYnC,IAgB8DiB,UAAQ,IACtE,wBAAQF,KAAK,SAAb,yCAEF,wBAAQK,QAAS0B,EAAjB,+BAKN,qCACE,oBAAInC,UAAWC,IAAMqC,MAArB,SAA6BpB,EAAQI,OACpCJ,EAAQc,cACP,qBAAKhC,UAAWC,IAAMsC,MAAOC,IAAKtB,EAAQc,aAAcS,IAAI,0CAG7DtB,GACC,sBAAKnB,UAAWC,IAAMyC,eAAtB,UACE,wBAAQtC,KAAK,SAASK,QAAS0B,EAA/B,0BACA,wBAAQ/B,KAAK,SAASK,QAASmB,EAA/B,mC,yBCiBCe,MAtEf,YAAoC,IAAdC,EAAa,EAAbA,WACpB,EAAwBnE,mBAAS,IAAjC,mBAAO6C,EAAP,KAAauB,EAAb,KACA,EAAkCpE,mBAAS,IAA3C,mBAAOqE,EAAP,KAAkBC,EAAlB,KACMC,EAAYC,mBAOZ3D,EAAU,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,yDACjBD,EAAEE,iBACEuC,EAAe,GAEF,KAAdc,EAJc,uBAMTI,EAAehB,YAAI5D,EAAD,UAAiBsE,EAAWO,IAA5B,YAAmCC,gBAN5C,SAOTC,YAAaH,EAAcJ,EAAW,YAP7B,uBASMQ,YAAeJ,GAAcK,OATnC,OASfvB,EATe,qBAYXwB,EAAgB,CACpBlC,OAAMmC,UAAWC,KAAKC,MACtBC,UAAWhB,EAAWO,IACtBnB,gBAfe,UAkBX6B,YAAOC,YAAW1F,EAAc,YAAaoF,GAlBlC,QAmBjBX,EAAQ,IACRE,EAAa,IApBI,4CAAH,sDAsChB,OACE,8BACE,uBAAM/C,UAAWC,IAAM8D,aAAc5D,SAAUb,EAA/C,UACE,sBAAKU,UAAWC,IAAM+D,cAAtB,UACE,gCACE,uBAAO5D,KAAK,OAAOf,MAAOiC,EAAMf,SAhDvB,SAAC,GAAwB,IAAblB,EAAY,EAAtBF,OAAUE,MAE7BwD,EAAQxD,IA8CsDgB,YAAY,sGAAsB4D,UAAW,MACnG,wBAAQjE,UAAWC,IAAMiE,cAAe9D,KAAK,SAA7C,0CAEF,uBAAO+D,QAAQ,aAAf,+DACA,uBAAO/D,KAAK,OAAO8B,IAAKc,EAAWrB,GAAG,aAAayC,OAAO,UAAU7D,SAxBpD,SAAC,GAAuB,IACxC8D,EADuC,EAArBlF,OAASmF,MACd,GAEbC,EAAa,IAAIC,WACvBD,EAAWE,cAAcJ,GACzBE,EAAWG,UAAY,YAAgC,IAAdC,EAAa,EAA7BC,cAAgBD,OACvC5B,EAAa4B,UAoBV7B,GACC,sBAAK9C,UAAWC,IAAM4E,aAAtB,UACE,qBAAKrC,IAAKM,EAAWL,IAAI,gDACzB,wBAAQhC,QAnBK,WACrBsC,EAAa,IACbC,EAAUtC,QAAQrB,MAAQ,IAiBlB,4DCjCGyF,MA9Bf,YAA6B,IAAdlC,EAAa,EAAbA,WACb,EAAgCnE,mBAAS,IAAzC,mBAAOsG,EAAP,KAAiBC,EAAjB,KAgBA,OAbAC,qBAAU,WACR,IAAMC,EAAYC,YAAMrB,YAAW1F,EAAc,YAAagH,YAAQ,YAAa,SASnF,OAPAC,YAAWH,GAAW,SAACI,GACrB,IAAMC,EAAgBD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACtC/D,GAAI+D,EAAS/D,IACV+D,EAASC,WAEdX,EAAYO,MAEP,kBAAMP,EAAY,OACxB,IAGD,gCACE,cAAC,EAAD,CAAapC,WAAYA,IACzB,8BACGmC,EAASU,KAAI,SAACvE,GAAD,OAEZ,aADA,CACC,EAAD,CAA0BA,QAASA,EAASC,SAAUD,EAAQ0C,YAAchB,EAAWO,KAAzEjC,EAAQS,a,iBCVjBiE,MAff,YAAmC,IAAdhD,EAAa,EAAbA,WACnB,OACE,8BACE,qBAAI5C,UAAWC,IAAM4F,SAArB,UACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,8CAEF,6BACE,eAAC,IAAD,CAAMA,GAAG,WAAT,yBAAuBlD,EAAWmD,YAAlC,uC,iBC+BKC,MArCf,YAAiD,IAA/BpD,EAA8B,EAA9BA,WAAYqD,EAAkB,EAAlBA,gBAC5B,EAAgCxH,mBAASmE,EAAWmD,aAApD,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAUX/G,EAAU,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACjBD,EAAEE,iBAECmD,EAAWmD,cAAgBG,EAHb,gCAITI,YAAcpI,EAAaqI,YAAa,CAC5CR,YAAaG,IALA,OAQfD,IARe,OAUjBG,EAAS,KAVQ,2CAAH,sDAahB,OACE,gCACE,+BAAKxD,EAAWmD,YAAhB,oBACA,uBAAM5F,SAAUb,EAAhB,UACE,uBAAOU,UAAWC,IAAMuG,WAAYpG,KAAK,OAAOC,YAAY,eAAKhB,MAAO6G,EAAU3F,SArBjE,SAAC,GAAuB,IAAblB,EAAY,EAArBF,OAASE,MAChC8G,EAAY9G,MAqBR,wBAAQW,UAAWC,IAAMwG,YAAarG,KAAK,SAA3C,yCAEF,wBAAQJ,UAAWC,IAAMyG,cAAejG,QA7BjB,WACzBvC,EAAayI,UACbP,EAAS,MA2BP,0CCbSQ,EAlBG,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,MAAOjE,EAAiC,EAAjCA,WAAYqD,EAAqB,EAArBA,gBACrC,OACE,eAAC,IAAD,CAAQa,SAAUlJ,mBAAlB,UACGiJ,GAAS,cAAC,EAAD,CAAYjE,WAAYA,IAClC,cAAC,IAAD,UAEIiE,EACA,qCACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAMrE,WAAYA,MACjD,cAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,WAAWC,QAAS,cAAC,EAAD,CAASrE,WAAYA,EAAYqD,gBAAiBA,SAExF,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,Y,MC2B5BC,MAxCf,WAEE,MAA4CzI,oBAAS,GAArD,mBAAO0I,EAAP,KAAuBC,EAAvB,KACA,EAAmC3I,mBAAS,MAA5C,mBAAOmE,EAAP,KAAmByE,EAAnB,KA6BA,OA3BApC,qBAAU,WAER/G,EAAaoJ,oBAAmB,SAACC,GAG7BF,EAFCE,EAEa,CACZxB,YAAawB,EAAKxB,YAAcwB,EAAKxB,YAAc,qBACnD5C,IAAKoE,EAAKpE,IACVmD,cAAe,SAACkB,GAAD,OAAcD,EAAKjB,cAAckB,KAGpC,MAEhBJ,GAAkB,QAEnB,IAaD,sBAAKpH,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,uDACCmH,EAAiB,cAAC,EAAD,CAAWN,MAAOY,QAAQ7E,GAAaA,WAAYA,EAAYqD,gBAZ7D,WACtB,IAAMsB,EAAOrJ,EAAaqI,YAC1Bc,EAAc,CACZtB,YAAawB,EAAKxB,YAClB5C,IAAKoE,EAAKpE,IACVmD,cAAe,SAACkB,GAAD,OAAcD,EAAKjB,cAAckB,SAOuE,+ECpC7HE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,W","file":"static/js/main.be4e72cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_form\":\"Auth_auth_form__M_AZV\",\"toggle_button\":\"Auth_toggle_button__1GxTM\",\"social_login\":\"Auth_social_login__2wJ6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"update_form\":\"Content_update_form__DumgT\",\"title\":\"Content_title__1Sg1q\",\"image\":\"Content_image__3Cw8h\",\"content_button\":\"Content_content_button__1c9GY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_form\":\"ContentForm_content_form__1cZqt\",\"input_wrapper\":\"ContentForm_input_wrapper__1zDnJ\",\"image_upload\":\"ContentForm_image_upload__1lCcS\",\"submit_button\":\"ContentForm_submit_button__2H3W6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name_input\":\"Profile_name_input__3Adx0\",\"edit_button\":\"Profile_edit_button__22_jO\",\"logout_button\":\"Profile_logout_button__cOU2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_list\":\"Navigation_nav_list__1Zdwd\"};","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nconst myFirebase = initializeApp(firebaseConfig);\r\nexport const firebaseAuth = getAuth(myFirebase);\r\nexport const fireDatabase = getFirestore();\r\nexport const fireStorage = getStorage();","import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { firebaseAuth } from 'myFirebase';\r\nimport style from 'css/Auth.module.css';\r\n\r\nfunction AuthForm() {\r\n  const [form, setForm] = useState({email : \"\", password: \"\"});\r\n  const [createAccount, setCreateAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // const formChange = (e) => {\r\n  //   const {target : {name, value}} = e;\r\n  //   if(name === \"email\") {\r\n  //     setEmail(value);\r\n  //   } else if(name === \"password\") {\r\n  //     setPassword(value);\r\n  //   }\r\n  // }\r\n  // 위 코드를 밑에 코드처럼 간단하게 변경 가능\r\n\r\n  const formChange = ({target : {name, value}}) => {\r\n    setForm({...form, [name]:value});\r\n  };\r\n\r\n  const formSubmit = async(e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let account;\r\n      if(createAccount) {\r\n        // create account\r\n        account = await createUserWithEmailAndPassword(firebaseAuth, form.email, form.password);\r\n      } else {\r\n        // login\r\n        account = await signInWithEmailAndPassword(firebaseAuth, form.email, form.password);\r\n      }\r\n      console.log(account);\r\n    } catch(error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // create Account true or false => 버튼 내용 변경\r\n  const toggleAccountButton = () => {\r\n    setCreateAccount((current) => !current);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className={style.auth_form} onSubmit={formSubmit}>\r\n        <input type=\"email\" name=\"email\" value={form.email} placeholder=\"이메일\" required onChange={formChange} />\r\n        <input type=\"password\" name=\"password\" value={form.password} placeholder=\"비밀번호\" required onChange={formChange} />\r\n        <button type=\"submit\">{createAccount ? \"회원가입\" : \"로그인\"}</button>\r\n        {error && <p>Error : {error}</p>}\r\n      </form>\r\n      <button className={style.toggle_button} onClick={toggleAccountButton}>{createAccount ? \"로그인하기\" : \"회원가입하기\"}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthForm;\r\n","import { firebaseAuth } from 'myFirebase';\r\nimport React from 'react';\r\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport AuthForm from 'components/AuthForm';\r\nimport style from 'css/Auth.module.css';\r\n\r\nfunction Auth() {\r\n  // google login onClick event\r\n  const googleLogin = async() => {\r\n    const provider = new GoogleAuthProvider();\r\n    await signInWithPopup(firebaseAuth, provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* AuthForm component */}\r\n      <AuthForm />\r\n      <div>\r\n        <button className={style.social_login} onClick={googleLogin}>Google로 시작하기</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;\r\n","import { fireDatabase, fireStorage } from 'myFirebase';\r\nimport React, { useState } from 'react';\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport style from 'css/Content.module.css';\r\n\r\nfunction Content({content, isWriter}) {\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n  const [editText, setEditText] = useState(content.text);\r\n\r\n  const contentFromDatabase = doc(fireDatabase, \"contents\", `${content.id}`);\r\n\r\n  const deleteButtonHandler = async() => {\r\n    const confirm = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    if(confirm) {\r\n      await deleteDoc(contentFromDatabase);\r\n      if(content.imageFileURL !== \"\") {\r\n        await deleteObject(ref(fireStorage, content.imageFileURL));\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleUpdate = () => {\r\n    setUpdateMode((current) => !current);\r\n  };\r\n\r\n  const editTextChange = ({target : {value}}) => {\r\n    setEditText(value);\r\n  };\r\n\r\n  const formSubmit = async(e) => {\r\n    e.preventDefault();\r\n    await updateDoc(contentFromDatabase, {text: editText});\r\n    setUpdateMode(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {updateMode ?\r\n        <> \r\n          {isWriter && \r\n            <div className={style.update_form}>\r\n              <form onSubmit={formSubmit}>\r\n                <input type=\"text\" value={editText} onChange={editTextChange} required/>\r\n                <button type=\"submit\">수정하기</button>\r\n              </form>\r\n              <button onClick={toggleUpdate}>취소</button>\r\n            </div>\r\n          }\r\n        </>\r\n        :\r\n        <>\r\n          <h4 className={style.title}>{content.text}</h4>\r\n          {content.imageFileURL && \r\n            <img className={style.image} src={content.imageFileURL} alt=\"업로드 이미지\" />\r\n          }\r\n          {/* 작성자와 로그인 중인 사용자가 같을 때 */}\r\n          {isWriter && \r\n            <div className={style.content_button}>\r\n              <button type=\"button\" onClick={toggleUpdate}>수정</button>\r\n              <button type=\"button\" onClick={deleteButtonHandler}>삭제</button>\r\n            </div>\r\n          }\r\n        </>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content;\r\n","import React, { useRef, useState } from 'react';\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { fireDatabase, fireStorage } from 'myFirebase';\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from 'css/ContentForm.module.css';\r\n\r\nfunction ContentForm({userObject}) {\r\n  const [text, setText] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState(\"\");\r\n  const InputFile = useRef();\r\n\r\n  const textChange = ({target : {value}}) => {\r\n    // setText(e.target.value);\r\n    setText(value);\r\n  };\r\n\r\n  const formSubmit = async(e) => {\r\n    e.preventDefault();\r\n    let imageFileURL = \"\";\r\n    // 업로드 하고자 하는 image file이 있는 경우\r\n    if(imageFile !== \"\") {\r\n        // storage에 image file 저장 (경로)\r\n      const imageFileRef = ref(fireStorage, `${userObject.uid}/${uuidv4()}`);\r\n      await uploadString(imageFileRef, imageFile, \"data_url\");\r\n      // image의 url을 받아서 데이터베이스에 저장하기 위함\r\n      imageFileURL = await getDownloadURL(imageFileRef).then();\r\n    }\r\n\r\n    const contentObject = {\r\n      text, createdAt: Date.now(), \r\n      writerUID: userObject.uid,\r\n      imageFileURL\r\n    };\r\n\r\n    await addDoc(collection(fireDatabase, \"contents\"), contentObject);\r\n    setText(\"\");\r\n    setImageFile(\"\");\r\n  };\r\n\r\n  const imageFileChange = ({target: {files}}) => {\r\n    const file = files[0];\r\n    // FileReader Web Api 를 이용해 파일을 읽음\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onloadend = ({currentTarget: {result}}) => {\r\n      setImageFile(result);\r\n    };\r\n  };\r\n\r\n  const clearImageFile = () => {\r\n    setImageFile(\"\");\r\n    InputFile.current.value = \"\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className={style.content_form} onSubmit={formSubmit}>\r\n        <div className={style.input_wrapper}>\r\n          <div>\r\n            <input type=\"text\" value={text} onChange={textChange} placeholder=\"작성하고 싶은 내용을 적어주세요📢\" maxLength={150} />\r\n            <button className={style.submit_button} type=\"submit\">글 올리기</button>\r\n          </div>\r\n          <label htmlFor=\"input_file\">📸이미지 업로드</label>\r\n          <input type=\"file\" ref={InputFile} id=\"input_file\" accept=\"image/*\" onChange={imageFileChange}/>\r\n        </div>\r\n        {imageFile && \r\n          <div className={style.image_upload}>\r\n            <img src={imageFile} alt=\"업로드한 이미지\"/>\r\n            <button onClick={clearImageFile}>이미지 지우기</button>\r\n          </div>\r\n        }\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContentForm;\r\n","import { fireDatabase } from 'myFirebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { collection, query, orderBy, onSnapshot } from 'firebase/firestore';\r\nimport Content from 'components/Content';\r\nimport ContentForm from 'components/ContentForm';\r\n\r\nfunction Home({userObject}) {\r\n  const [contents, setContents] = useState([]);\r\n  \r\n  // database에 있는 데이터 내림차순 정렬 후 state에 저장\r\n  useEffect(() => {\r\n    const documents = query(collection(fireDatabase, \"contents\"), orderBy(\"createdAt\", \"desc\"));\r\n    // onSnapshot은 데이터베이스의 변화를 실시간으로 알려줌\r\n    onSnapshot(documents, (snapshot) => {\r\n      const documentArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data()\r\n      }));\r\n      setContents(documentArray);\r\n    });\r\n    return () => setContents([]);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ContentForm userObject={userObject}/>\r\n      <div>\r\n        {contents.map((content) => (\r\n          // isWriter : 작성자와 로그인 중인 사용자가 같은지 true or false 전달\r\n          <Content key={content.id} content={content} isWriter={content.writerUID === userObject.uid} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from 'css/Navigation.module.css';\r\n\r\nfunction Navigation({userObject}) {\r\n  return (\r\n    <nav>\r\n      <ul className={style.nav_list}>\r\n        <li>\r\n          <Link to=\"/\" >🏡홈으로</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">💚{userObject.displayName}의 프로필</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation;\r\n","import { firebaseAuth } from 'myFirebase';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { updateProfile } from 'firebase/auth';\r\nimport style from 'css/Profile.module.css';\r\n\r\nfunction Profile({userObject, currentUserName}) {\r\n  const [userName, setUserName] = useState(userObject.displayName);\r\n  const navigate = useNavigate();\r\n  const handleLogoutButton = () => {\r\n    firebaseAuth.signOut();\r\n    navigate('/');\r\n  };\r\n\r\n  const userNameChange = ({target: {value}}) => {\r\n    setUserName(value);\r\n  };\r\n\r\n  const formSubmit = async(e) => {\r\n    e.preventDefault();\r\n    // firebase Auth의 displayName을 변경시켜줌\r\n    if(userObject.displayName !== userName) {\r\n      await updateProfile(firebaseAuth.currentUser, {\r\n        displayName: userName\r\n      });\r\n      // project안에서의 displayName 역시 변경시켜줌\r\n      currentUserName();\r\n    }\r\n    navigate('/');\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h4>{userObject.displayName}의 Profile</h4>\r\n      <form onSubmit={formSubmit}>\r\n        <input className={style.name_input} type=\"text\" placeholder=\"이름\" value={userName} onChange={userNameChange}/>\r\n        <button className={style.edit_button} type=\"submit\">수정하기</button>\r\n      </form>\r\n      <button className={style.logout_button} onClick={handleLogoutButton}>로그아웃</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Auth from 'pages/Auth';\r\nimport Home from 'pages/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'pages/Profile';\r\n\r\nconst AppRouter = ({login, userObject, currentUserName}) => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      {login && <Navigation userObject={userObject}/>}\r\n      <Routes>\r\n        {\r\n          login ?\r\n          <>\r\n            <Route exact path=\"/\" element={<Home userObject={userObject}/>} />\r\n            <Route exact path=\"/profile\" element={<Profile userObject={userObject} currentUserName={currentUserName}/>} />\r\n          </> \r\n          : <Route exact path=\"/\" element={<Auth/>} />\r\n        }\r\n      </Routes>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { firebaseAuth } from 'myFirebase';\nimport 'css/App.css';\n\nfunction App() {\n  // firebase data를 읽어들였는지 여부에 대한 state\n  const [firebaseListen, setFirebaseListen] = useState(false);\n  const [userObject, setUserObject]= useState(null);\n\n  useEffect(() => {\n    // Auth에 대한 변화를 감지함\n    firebaseAuth.onAuthStateChanged((user) => {\n      if(user) {\n        // user의 displayName, uid, updateProfile만 userObject에 넣어줌\n        setUserObject({\n          displayName: user.displayName ? user.displayName : \"사용자\",\n          uid: user.uid,\n          updateProfile: (argument) => user.updateProfile(argument)\n        });\n      } else {\n        setUserObject(null);\n      }\n      setFirebaseListen(true);\n    });\n  }, []);\n\n  // project 내의 displayName을 변경시켜줌\n  const currentUserName = () => {\n    const user = firebaseAuth.currentUser;\n    setUserObject({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (argument) => user.updateProfile(argument)\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <h3 className=\"title\">🌳 Book-ggum-na-mu 🌳</h3>\n      {firebaseListen ? <AppRouter login={Boolean(userObject)} userObject={userObject} currentUserName={currentUserName}/> : \"로그인 정보를 불러오는 중...\"}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}